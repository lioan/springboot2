<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--<contextName>dev_logback</contextName>-->
    <property name="log.path" value="D:\\logs\\springboot2"/>
    <property name="log.file" value="springboot2" />
    <!--彩色日志-->
    <!--彩色日志依赖的渲染类-->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉ERROR级别以下的日志不输出到文件中。如果不用记得注释掉，不然你控制台会发现没日志-->
        <!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>ERROR</level>
         </filter>-->
        <encoder>
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %clr(${PID}){magenta} %clr(---){green} [%thread] %logger{36} : %msg%n</pattern>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}\\${log.file}.log</file>
        <!--<append>true</append>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
            <fileNamePattern>${log.path}\\${log.file}.%d{yyyyMMdd}.log</fileNamePattern>
            <!--需要打开下述配置才能满足每天一个日志文件-->
            <!--表示只保留最近30天的日志，可以使用%d{yyyy-MM-dd_HH-mm}来定义精确到分的日志切分方式-->
            <maxHistory>30</maxHistory>
            <!--SizeAndTimeBasedRollingPolicy必须配置-->
            <!--<maxFileSize>20MB</maxFileSize>-->
            <!--用来指定日志文件的上限大小，例如设置为1GB的话，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <!--<pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level ${PID} --- [%thread] %logger{36} : %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性-->
    <root level="info">
        <!--level:用来设置打印级别，可以包含零个或多个元素，标识这个appender将会添加到这个loger-->
        <appender-ref ref="console"/>
        <appender-ref ref="file"/>
    </root>

    <!--控制某个包或具体某个类的日志打印，两种方式-->
    <!-- 第一种：logback为java中的包 -->
    <!--<logger name="com.lioan.ims.web.controller"/>-->
    <!--第二种：logback.LogbackDemo：类的全路径 -->
    <logger name="cn.com.lioan.springboot2.web.controller.HiController" level="info" additivity="false">
        <appender-ref ref="console"/>
        <appender-ref ref="file"/>
    </logger>

    <!--使用mybatis的时候，sql语句是debug下才会打印，而这里我们只配置了info，所以想要查看sql语句的话，有以下两种操作-->
    <!--第一种：将root的level改为debug，不可取，会打印很多其他信息-->
    <!--第二种-->
    <logger name="cn.com.lioan.springboot2.dao" level="debug"/>

</configuration>